akka {

  loglevel = "DEBUG"
    loggers = ["akka.event.slf4j.Slf4jLogger"]
    logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

    # DEBUG
    http.server.idle-timeout = 180s
    http.server.websocket.periodic-keep-alive-max-idle = 180s

    actor {
      debug {
        # Enable additional debug information
        receive = on
        lifecycle = on
        unhandled = on
      }
        serializers {
          kryo = "io.altoo.akka.serialization.kryo.KryoSerializer"
        }

        serialization-bindings {
          "java.io.Serializable" = kryo
        }
    }

  persistence {
    debug {
      # Enable additional debug information
      receive = on
      lifecycle = on
      unhandled = on
    }
    # Journal
    journal.plugin = "akka.persistence.cassandra.journal"
    cassandra.journal.keyspace-autocreate = true
    cassandra.journal.tables-autocreate = true

    # Snapshot
    snapshot-store.plugin = "akka.persistence.cassandra.snapshot"
    cassandra.snapshot.keyspace-autocreate = true
    cassandra.snapshot.tables-autocreate = true

  }

  kryo {
    type = "graph"
    id-strategy = "incremental"
    implicit-registration-logging = true
    kryo-trace = true
    resolve-subclasses = true
  }
}